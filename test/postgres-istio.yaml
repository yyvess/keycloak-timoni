apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: zel-test
---
apiVersion: v1
immutable: true
kind: Secret
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak-jks-pwd
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-jks-pwd-d89b3236
  namespace: zel-test
stringData:
  password-jks: changeit
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: jks
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-jks
  namespace: zel-test
spec:
  commonName: infinispan-jks
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: keycloak
  keystores:
    jks:
      create: true
      passwordSecretRef:
        key: password-jks
        name: keycloak-jks-pwd-d89b3236
  secretName: keycloak-jks
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: zel-test
spec:
  selfSigned: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: web
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-web
  namespace: zel-test
spec:
  ports:
  - appProtocol: http
    name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: keycloak
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: jgroups
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-jgroups
  namespace: zel-test
spec:
  clusterIP: None
  ports:
  - appProtocol: tcp
    name: jgroups
    port: 7800
    protocol: TCP
    targetPort: jgroups
  - appProtocol: tcp
    name: jgroups-ssl
    port: 2157
    protocol: TCP
    targetPort: jgroups
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: keycloak
  type: ClusterIP
---
apiVersion: v1
data:
  cache-ispn.xml: |2-
      <infinispan
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="urn:infinispan:config:11.0 http://www.infinispan.org/schemas/infinispan-config-11.0.xsd"
              xmlns="urn:infinispan:config:11.0">
          <jgroups>
              <!--
              source: https://infinispan.org/docs/13.0.x/titles/embedding/embedding.html
              -->
              <stack name="encrypt-kubernetes" extends="kubernetes">
                  <SSL_KEY_EXCHANGE keystore_name="/jks/keystore.jks"
                                          keystore_password="changeit"
                                          port="2157"
                                          port_range="0"
                                          stack.combine="INSERT_AFTER"
                                          stack.position="VERIFY_SUSPECT2"/>
                  <ASYM_ENCRYPT use_external_key_exchange="true"
                                change_key_on_leave="false"
                                change_key_on_coord_leave="false"
                                sym_algorithm="AES"
                                sym_keylength="128"
                                asym_algorithm="RSA"
                                asym_keylength="2048"
                                stack.combine="INSERT_BEFORE"
                                stack.position="pbcast.NAKACK2"/>
              </stack>
          </jgroups>

          <cache-container name="keycloak">
              <transport stack="encrypt-kubernetes" lock-timeout="60000"/>
              <local-cache name="realms">
                  <encoding>
                      <key media-type="application/x-java-object"/>
                      <value media-type="application/x-java-object"/>
                  </encoding>
                  <memory max-count="10000"/>
              </local-cache>
              <local-cache name="users">
                  <encoding>
                      <key media-type="application/x-java-object"/>
                      <value media-type="application/x-java-object"/>
                  </encoding>
                  <memory max-count="10000"/>
              </local-cache>
              <distributed-cache name="sessions" owners="2">
                  <expiration lifespan="-1"/>
              </distributed-cache>
              <distributed-cache name="authenticationSessions" owners="2">
                  <expiration lifespan="-1"/>
              </distributed-cache>
              <distributed-cache name="offlineSessions" owners="2">
                  <expiration lifespan="-1"/>
              </distributed-cache>
              <distributed-cache name="clientSessions" owners="2">
                  <expiration lifespan="-1"/>
              </distributed-cache>
              <distributed-cache name="offlineClientSessions" owners="2">
                  <expiration lifespan="-1"/>
              </distributed-cache>
              <distributed-cache name="loginFailures" owners="2">
                  <expiration lifespan="-1"/>
              </distributed-cache>
              <local-cache name="authorization">
                  <encoding>
                      <key media-type="application/x-java-object"/>
                      <value media-type="application/x-java-object"/>
                  </encoding>
                  <memory max-count="10000"/>
              </local-cache>
              <replicated-cache name="work">
                  <expiration lifespan="-1"/>
              </replicated-cache>
              <local-cache name="keys">
                  <encoding>
                      <key media-type="application/x-java-object"/>
                      <value media-type="application/x-java-object"/>
                  </encoding>
                  <expiration max-idle="3600000"/>
                  <memory max-count="1000"/>
              </local-cache>
              <distributed-cache name="actionTokens" owners="2">
                  <encoding>
                      <key media-type="application/x-java-object"/>
                      <value media-type="application/x-java-object"/>
                  </encoding>
                  <expiration max-idle="-1" lifespan="-1" interval="300000"/>
                  <memory max-count="-1"/>
              </distributed-cache>
          </cache-container>
      </infinispan>
immutable: true
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-66d00e6e
  namespace: zel-test
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: zel-test
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: zel-test
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - port: 8080
      protocol: TCP
  - from:
    - podSelector: {}
    ports:
    - port: 8080
      protocol: TCP
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: keycloak
    ports:
    - port: 7800
      protocol: TCP
    - port: 2157
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  policyTypes:
  - Ingress
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: zel-test
spec:
  gateways:
  - istio-system/istio-ingressgateway
  hosts:
  - keycloak.myorg.com
  http:
  - directResponse:
      status: 403
    match:
    - uri:
        prefix: /health
    - uri:
        prefix: /metrics
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: keycloak-web
        port:
          number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: zel-test
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
    spec:
      containers:
      - command:
        - /opt/keycloak/bin/kc.sh
        - start
        env:
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: JAVA_OPTS_APPEND
          value: -Djgroups.dns.query=keycloak-jgroups
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: KC_CACHE_CONFIG_FILE
          value: cache-ispn.xml
        - name: KC_DB
          value: postgres
        - name: KEYCLOAK_ADMIN
          value: admin
        - name: KEYCLOAK_ADMIN_PASSWORD
          value: FIXME-USE-SECRET
        - name: KC_DB_URL
          value: jdbc:postgresql://keycloak.postgres.svc.cluster.local/keycloakdb?sslmode=require
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: keycloakdb-keycloak-owner-user.minimal-postgres.credentials
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: keycloakdb-keycloak-owner-user.minimal-postgres.credentials
        - name: KC_PROXY
          value: edge
        - name: KC_HOSTNAME_STRICT
          value: "false"
        - name: KC_LOG_LEVEL
          value: INFO
        image: quay.io/keycloak/keycloak:23.0.5@sha256:8772ab5e763f3374b7bb70bce4a96ad384b39c548c40007113538e103ee8a8f2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 7800
          name: jgroups
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 200m
            memory: 768Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
        volumeMounts:
        - mountPath: /opt/keycloak/conf
          name: cache
          readOnly: true
        - mountPath: /jks
          name: jks
          readOnly: true
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      volumes:
      - name: jks
        secret:
          secretName: keycloak-jks
      - configMap:
          items:
          - key: cache-ispn.xml
            path: cache-ispn.xml
          name: keycloak-66d00e6e
        name: cache
---
