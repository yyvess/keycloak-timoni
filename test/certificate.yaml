apiVersion: v1
kind: Namespace
metadata:
  name: test
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: test
spec:
  dnsNames:
  - localhost:8443
  duration: 2160h0m0s
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: keycloak
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 4096
  renewBefore: 360h0m0s
  secretName: keycloak-cert
  subject:
    organizations:
    - myorg.com
---
apiVersion: v1
immutable: true
kind: Secret
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak-jks-pwd
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-jks-pwd-d89b3236
  namespace: test
stringData:
  password-jks: changeit
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: jks
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-jks
  namespace: test
spec:
  commonName: infinispan-jks
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: keycloak
  keystores:
    jks:
      create: true
      passwordSecretRef:
        key: password-jks
        name: keycloak-jks-pwd-d89b3236
  secretName: keycloak-jks
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: test
spec:
  selfSigned: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: web
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-web
  namespace: test
spec:
  ports:
  - appProtocol: https
    name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: keycloak
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: jgroups
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-jgroups
  namespace: test
spec:
  clusterIP: None
  ports:
  - appProtocol: tcp
    name: jgroups
    port: 7800
    protocol: TCP
    targetPort: jgroups
  - appProtocol: tcp
    name: jgroups-ssl
    port: 2157
    protocol: TCP
    targetPort: jgroups
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: keycloak
  type: ClusterIP
---
apiVersion: v1
data:
  cache-ispn.xml: "  <infinispan\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n
    \         xsi:schemaLocation=\"urn:infinispan:config:11.0 http://www.infinispan.org/schemas/infinispan-config-11.0.xsd\"\n
    \         xmlns=\"urn:infinispan:config:11.0\">\n      <jgroups>\n          <!--\n
    \         source: https://infinispan.org/docs/13.0.x/titles/embedding/embedding.html\n
    \         -->\n          <stack name=\"encrypt-kubernetes\" extends=\"kubernetes\">\n\t\t\t\t\t\t\t<SSL_KEY_EXCHANGE
    keystore_name=\"/jks/keystore.jks\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkeystore_password=\"changeit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tport=\"2157\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tport_range=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstack.combine=\"INSERT_AFTER\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstack.position=\"VERIFY_SUSPECT2\"/>\n
    \             <ASYM_ENCRYPT use_external_key_exchange=\"true\"\n                            change_key_on_leave=\"false\"\n
    \                           change_key_on_coord_leave=\"false\"\n                            sym_algorithm=\"AES\"\n
    \                           sym_keylength=\"128\"\n                            asym_algorithm=\"RSA\"\n
    \                           asym_keylength=\"2048\"\n                            stack.combine=\"INSERT_BEFORE\"\n
    \                           stack.position=\"pbcast.NAKACK2\"/>\n          </stack>\n
    \     </jgroups>\n\n      <cache-container name=\"keycloak\">\n          <transport
    stack=\"encrypt-kubernetes\" lock-timeout=\"60000\"/>\n          <local-cache
    name=\"realms\">\n              <encoding>\n                  <key media-type=\"application/x-java-object\"/>\n
    \                 <value media-type=\"application/x-java-object\"/>\n              </encoding>\n
    \             <memory max-count=\"10000\"/>\n          </local-cache>\n          <local-cache
    name=\"users\">\n              <encoding>\n                  <key media-type=\"application/x-java-object\"/>\n
    \                 <value media-type=\"application/x-java-object\"/>\n              </encoding>\n
    \             <memory max-count=\"10000\"/>\n          </local-cache>\n          <distributed-cache
    name=\"sessions\" owners=\"2\">\n              <expiration lifespan=\"-1\"/>\n
    \         </distributed-cache>\n          <distributed-cache name=\"authenticationSessions\"
    owners=\"2\">\n              <expiration lifespan=\"-1\"/>\n          </distributed-cache>\n
    \         <distributed-cache name=\"offlineSessions\" owners=\"2\">\n              <expiration
    lifespan=\"-1\"/>\n          </distributed-cache>\n          <distributed-cache
    name=\"clientSessions\" owners=\"2\">\n              <expiration lifespan=\"-1\"/>\n
    \         </distributed-cache>\n          <distributed-cache name=\"offlineClientSessions\"
    owners=\"2\">\n              <expiration lifespan=\"-1\"/>\n          </distributed-cache>\n
    \         <distributed-cache name=\"loginFailures\" owners=\"2\">\n              <expiration
    lifespan=\"-1\"/>\n          </distributed-cache>\n          <local-cache name=\"authorization\">\n
    \             <encoding>\n                  <key media-type=\"application/x-java-object\"/>\n
    \                 <value media-type=\"application/x-java-object\"/>\n              </encoding>\n
    \             <memory max-count=\"10000\"/>\n          </local-cache>\n          <replicated-cache
    name=\"work\">\n              <expiration lifespan=\"-1\"/>\n          </replicated-cache>\n
    \         <local-cache name=\"keys\">\n              <encoding>\n                  <key
    media-type=\"application/x-java-object\"/>\n                  <value media-type=\"application/x-java-object\"/>\n
    \             </encoding>\n              <expiration max-idle=\"3600000\"/>\n
    \             <memory max-count=\"1000\"/>\n          </local-cache>\n          <distributed-cache
    name=\"actionTokens\" owners=\"2\">\n              <encoding>\n                  <key
    media-type=\"application/x-java-object\"/>\n                  <value media-type=\"application/x-java-object\"/>\n
    \             </encoding>\n              <expiration max-idle=\"-1\" lifespan=\"-1\"
    interval=\"300000\"/>\n              <memory max-count=\"-1\"/>\n          </distributed-cache>\n
    \     </cache-container>\n  </infinispan>"
immutable: true
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak-bef22f5a
  namespace: test
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: test
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: test
spec:
  ingress:
  - from:
    - podSelector: {}
    ports:
    - port: 8443
      protocol: TCP
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: keycloak
    ports:
    - port: 7800
      protocol: TCP
    - port: 2157
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  policyTypes:
  - Ingress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/version: 0.0.0-devel
  name: keycloak
  namespace: test
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
    spec:
      containers:
      - command:
        - /opt/keycloak/bin/kc.sh
        - start
        env:
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: JAVA_OPTS_APPEND
          value: -Djgroups.dns.query=keycloak-jgroups
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: KC_CACHE_CONFIG_FILE
          value: cache-ispn.xml
        - name: KC_HTTPS_CERTIFICATE_FILE
          value: /certs/tls.crt
        - name: KC_HTTPS_CERTIFICATE_KEY_FILE
          value: /certs/tls.key
        - name: KEYCLOAK_ADMIN
          value: admin
        - name: KEYCLOAK_ADMIN_PASSWORD
          value: admin
        - name: KC_DB
          value: postgres
        - name: KC_DB_URL
          value: jdbc:postgresql://localhost/keycloak
        - name: KC_DB_USERNAME
          value: keycloak
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: my-key
              name: my-secret
        image: quay.io/keycloak/keycloak:23.0@sha256:cff31dc6fbb0ab0b66176b990e6b9e262fa74a501abb9a4bfa4a529cbc8a526a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 7800
          name: jgroups
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 200m
            memory: 768Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
        volumeMounts:
        - mountPath: /opt/keycloak/conf
          name: cache
          readOnly: true
        - mountPath: /certs
          name: certs
          readOnly: true
        - mountPath: /jks
          name: jks
          readOnly: true
      serviceAccountName: default
      volumes:
      - name: certs
        secret:
          secretName: keycloak-cert
      - name: jks
        secret:
          secretName: keycloak-jks
      - configMap:
          items:
          - key: cache-ispn.xml
            path: cache-ispn.xml
          name: keycloak-bef22f5a
        name: cache
---
